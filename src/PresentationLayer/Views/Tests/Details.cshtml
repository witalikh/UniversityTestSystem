@model BusinessLayer.ViewModels.TestViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>TestEntity</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.StartDateTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.StartDateTime)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.EndDateTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.EndDateTime)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DurationSeconds)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DurationSeconds)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.AttemptsAllowed)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.AttemptsAllowed)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.TotalGrade)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.TotalGrade)
        </dd>
    </dl>
    <div class="table-responsive">
        @await Html.PartialAsync("_QuestionsPartialIndex", @Model.Questions, new ViewDataDictionary(ViewData){{"testId", @Model.Id}, {"delete", false}})
    </div>
</div>
<div>
    <a asp-route="tests-edit-by-classroom-get" asp-route-classroomId="@ViewBag.ClassroomId" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-route="tests-index-by-classroom" asp-route-classroomId="@ViewBag.ClassroomId">Back to List</a>
</div>
